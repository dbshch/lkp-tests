#!/bin/sh
# - group
# - cpu.cfs_period_us
# - cpu.cfs_quota_us
# - cpu.rt_period_us
# - cpu.rt_runtime_us
# - cpuset.cpu_exclusive
# - cpuset.cpus
# - cpuset.mem_exclusive
# - cpuset.mem_hardwall
# - cpuset.memory_migrate
# - cpuset.memory_pressure
# - cpuset.memory_pressure_enabled
# - cpuset.memory_spread_page
# - cpuset.memory_spread_slab
# - cpuset.mems
# - cpuset.sched_load_balance
# - cpuset.sched_relax_domain_level
# - memory.kmem.limit_in_bytes
# - memory.kmem.tcp.limit_in_bytes
# - memory.limit_in_bytes
# - memory.memsw.limit_in_bytes
# - memory.move_charge_at_immigrate
# - memory.oom_control
# - memory.soft_limit_in_bytes
# - memory.swappiness
# - memory.use_hierarchy
# - blkio.weight
# - blkio.weight_device
# - blkio.throttle.read_bps_device
# - blkio.throttle.write_bps_device
# - blkio.throttle.read_iops_device
# - blkio.throttle.write_iops_device

. $LKP_SRC/lib/reproduce-log.sh
. $LKP_SRC/lib/debug.sh
. $LKP_SRC/lib/cgroup.sh

CGROUP_MNT=/cgroup

[ -e '/proc/cgroups' ] || die "dir not exist: /proc/cgroups"

# Clear cgroups and subsystem controllers mount point for v1 version
clear_cgroup

#clear cgroups and subsystem controllers mount point for v2 version
clear_cgroup2

#Bind each subsystem to an individual hierachy and create an individual control group
create_cgroup $CGROUP_MNT $testcase

#Tuning parammeter defined in the jobfile
env | grep -F '_46_' |
while read line
do
	key=${line%%=*}
	val=${line##*=}
	[ -n "$val" ] || continue
	param=$(echo "$key" | sed 's/_46_/./g')
	if [ "${key%%_46_*}" = "cpu" -o "${key%%_46_*}" = "cpuacct" ]; then
		if [ -w "$CGROUP_MNT/cpu,cpuacct/$testcase/$param" ]; then
			log_eval "echo '$val' > '$CGROUP_MNT/cpu,cpuacct/$testcase/$param'"
		else
			echo "Warning: parammeter $param doesn't exist or doesn't have write \
permission in $CGROUP_MNT/cpu,cpuacct/$testcase/ directory"
		fi

	elif [ -w "$CGROUP_MNT/${key%%_46_*}/$testcase/$param" ]; then
		log_eval "echo '$val' > '$CGROUP_MNT/${key%%_46_*}/$testcase/$param'"
	else
		echo "Warning: parammeter $param doesn't exist or doesn't have write \
permission in $CGROUP_MNT/${key%%_46_*}/$testcase/ directory"
	fi
done

#Set PPID to cgroup tasks
for subsys_tasks in $CGROUP_MNT/*/$testcase/tasks
do
	log_eval "echo '$PPID' > '$subsys_tasks'"
done
