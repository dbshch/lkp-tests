#!/bin/sh
### BEGIN INIT INFO
# Provides:          nfsroot
# Required-Start:    $all
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: NFSROOT setup
# Description:       NFSROOT setup
### END INIT INFO

umask 002

export PATH=$PATH:$LKP_SRC/bin
echo   PATH=$PATH

. $LKP_SRC/lib/bootstrap.sh

# https://stackoverflow.com/questions/19100708/mongodb-mongorestore-failure-localefacet-s-create-c-locale-name-not-valid
# To fix:
# terminate called after throwing an instance of 'std::runtime_error'
#  what():  locale::facet::_S_create_c_locale name not valid
[ -z "$LC_ALL" ] && locale -a 2>/dev/null | grep -qw C.UTF-8 && export LC_ALL=C.UTF-8

boot_init

# when to not reboot is a policy issue, which can be refined later.
# here just serves as an example only.
# FIXME: need to consider more factors, such as cmdline, boot_parameter
job_does_not_need_reboot()
{
	grep -q "^do_not_reboot: 1$" $job && {
		echo "LKP: [do_not_reboot] start a new job without rebooting"
		return 0
	}

	grep -q "^do_not_reboot_for_same_kernel: 1$" $job &&
	is_same_kernel_and_rootfs && is_same_testcase && is_same_bp_memmap && {
		echo "LKP: [do_not_reboot_for_same_kernel] start a new job without rebooting"
		return 0
	}

	return 1
}

job_force_reboot()
{
	grep -q "^force_reboot: \+1$" $job
}

start_reboot_watchdog()
{
	[ -n "$boot_timeout" ] || return
	[ -f /var/lock/bmc-watchdog ] && return

	bmc-watchdog --set --start-after-set -i $boot_timeout
}

while true; do
	echo $LKP_DEBUG_PREFIX $LKP_SRC/bin/run-lkp
	$LKP_DEBUG_PREFIX $LKP_SRC/bin/run-lkp $job

	if tbox_cant_kexec || job_force_reboot; then
		echo "LKP: rebooting"

		# Avoid get stuck in yocto minimal rootfs.
		# LKP: rebooting
		# [    8.124081] LKP: rebooting
		# # (shell prompt)
		is_virt && [ -e '/proc/sysrq-trigger' ] && {
			sync
			echo s > /proc/sysrq-trigger
			echo b > /proc/sysrq-trigger
		}

		start_reboot_watchdog
		reboot 2>/dev/null && exit
	fi

	if [ -n "$LKP_DEBUG" ]; then
		# To debug what left from last run
		set -x
		ps faux 2>/dev/null || ps
		ls -l /tmp/
		ls -l /tmp/lkp
		lsmod
	fi

	next_job
	rsync_rootfs
	job_does_not_need_reboot || break
done

$LKP_SRC/bin/kexec-lkp ${pxe_user:-lkp} $NEXT_JOB
