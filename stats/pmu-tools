#!/usr/bin/env ruby

results = Hash.new(0)

# Example output
#    290.690747746 777209  mem_load_uops_l3_miss_retired_remote_dram 89128748143 100.00
#    324.224668698 7928832 Bytes llc_misses.mem_read 8005538025 100.00

STDIN.each_line do |line|
  if line =~ /\d+.\d+\s+(\d+)\s+(\S+)\s+(\S+)/
    if $2 == "Bytes"
      key = "#{$3}_#{$2}"
    else
      key = $2
    end
    results[key] += $1.to_i
  end
end

results.each do |key, value|
  puts "#{key}: #{value}"
end

results.each do |key, miss|
  next unless key =~ /(.*)-misses/
  stem = $1
  ['s', '-references', '-instructions'].each do |pfx|
    value = results[stem + pfx]
    next if value.zero?
    total = if pfx == 's'
              value + miss
            else
              value
            end
    puts "#{stem}-miss-rate%: #{miss * 100.0 / total}"
    break
  end
end

cycles = results['cpu-cycles']
instructions = results['instructions']

puts "ipc: #{instructions.to_f / cycles}" if cycles != 0 && instructions != 0

itlb_miss = results['iTLB-load-misses']

puts "instructions-per-iTLB-miss: #{instructions.to_f / itlb_miss}" if itlb_miss != 0 && instructions != 0
