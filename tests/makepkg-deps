#!/bin/bash
# - rootfs
# - benchmark

. $LKP_SRC/lib/debug.sh

[ -n "$rootfs" ] || die "rootfs is empty"
[ -n "$benchmark" ] || die "benchmark is empty"

DISTRO=${rootfs%%-*}

. $LKP_SRC/distro/${DISTRO}

DEPS_MNT=/osimage/deps
mkdir -p "$DEPS_MNT"
if [ -n "$LKP_SERVER" ]; then
	mount $LKP_SERVER:$DEPS_MNT $DEPS_MNT || die "Failed to run mount"
fi

umask 002

pack_to=$DEPS_MNT/$rootfs
[[ -d "$pack_to" ]] || {
	mkdir "$pack_to"
	chown .lkp "$pack_to"
}

check_shared_package "$benchmark" && exit

dpkg --add-architecture i386
update

apt_install_depends()
{
	local script
	local bm="$1"
	local scripts=$(find $LKP_SRC/distro/depends/ -name "$bm" -o -name "${bm}.[0-9]")

	apt-get install -yf
	for script in $scripts
	do
		script=$(basename $script)
		packages=$(get_dependency_packages debian $script)

		[ -z "$packages" ] && continue

		echo install packages for $script: $packages
		LC_ALL="C" apt-get -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confold install -y $packages
	done
}

apt_install_depends lkp-dev

[[ "$benchmark" = "all" ]] && benchmark="$(ls $LKP_SRC/distro/depends | grep -v -e '-dev' -e '-whitelist')"

for BM_NAME in $benchmark
do
	echo "Packing deps of $BM_NAME"
	check_shared_package $BM_NAME

	work_dir=$(mktemp -d /tmp/makepkg-deps-$BM_NAME-XXXXXXXX)
	cd $work_dir

	build_depends_pkg $BM_NAME "$work_dir" && pack

	rm -fr "$work_dir"
done
