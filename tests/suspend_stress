#!/bin/bash
# - mode
# - rtcwake	(dont show)
# - iterations
# - runtime	(dont show)
# - pm_test	(dont show)
# - idle	(dont show)

[ -n "$mode" ] || mode='freeze'
[ -n "$iterations" ] || iterations=1
[ -n "$rtcwake" ] || rtcwake=60
[ -n "$idle" ] || idle=10

if [ -z "$runtime" ]
then
	runtime=$(( $iterations * 120))
fi

rtcwake_file=/sys/class/rtc/rtc0/wakealarm

echo "SUSPEND RESUME TEST STARTED"

if [ "$mode" = "mem" ]
then
	if [ -f "/sys/power/mem_sleep" ]
	then
		echo deep > /sys/power/mem_sleep
		if [ $? -ne 0 ]
		then
			echo "mem sleep not supported. avaliable mem sleep type: $(cat /sys/power/mem_sleep)"
			exit 1
		fi
	fi
fi

if [ ! -z "$pm_test" ]
then
	echo "pm_test set to $pm_test"
	echo $pm_test > /sys/power/pm_test
	if [ $? -ne 0 ]
	then
		echo failed to set pm_test
		exit 1
	fi
	[ "none" = "$pm_test" ] && pm_test=""
fi

if [ "$mode" = "disk" ]
then
	echo "test_resume for hibernation is enabled"
	echo test_resume > /sys/power/disk
	if [ $? -ne 0 ]
	then
		echo failed to set test_resume
		exit 1
	fi
fi

for i in $(seq $iterations)
do
	echo "Suspend to $mode $i/$iterations:"
	if [[ ( -z "$pm_test" ) && ( "$mode" != "disk" ) ]]
	then
		echo 0 > $rtcwake_file
		echo "+$rtcwake" > $rtcwake_file
		if [ $? -ne 0 ]
		then
			echo failed to set rtcwake
			exit 1
		fi
	fi
	echo $mode > /sys/power/state
	if [ $? -ne 0 ]
	then
		echo "Failed"
		exit 1
	fi
	echo "Done"
	echo "Sleep for $idle seconds"
	sleep $idle
done

echo "SUSPEND RESUME TEST SUCCESS"
exit 0
