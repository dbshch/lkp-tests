#!/bin/bash
# - mode
# - runtime (dontshow)
# - option (dontshow)
# - multi
# - rtcwake (dont show)
# - idle (dont show)

. $LKP_SRC/lib/upload.sh

export PATH=/lkp/benchmarks/analyze_suspend:$PATH

echo options: mode: $mode, runtime: $runtime, rtcwake: $rtcwake, multi: $multi, option: $option
options=""
[ -n "$mode" ] || mode='freeze'
[ -n "$runtime" ] || runtime=600
[ -n "$rtcwake" ] || rtcwake=30
[ -n "$idle" ] || idle=5

options="-m $mode $option -rtcwake $rtcwake"

[ -z "$multi" ] || options="$options -multi $multi $idle"

# use -gzip and -skiphtml to reduce the memory usage
options="$options -gzip -skiphtml"


################################################################################
# To avoid OOM, before setting ftrace buffer size, we need to reserve memory for
# 1. analyze_suspend processing
# 2. saving result files because we're using ramdisk
################################################################################

total_mem=$(cat /proc/meminfo | grep MemFree | awk '{print $2}')
# reserve 400M for processing
process_mem=$((400 * 1024))

case $options in
	*" -f "*) result_mem=$((100 * 1024));;
	*" -dev "*) result_mem=$((1 * 1024));;
	*) result_mem=512;;
esac

[ -z $multi ] || result_mem=$(($result_mem * $multi))

ftrace_mem=$(($total_mem - $process_mem - $result_mem))

cat $option | grep "\-f" > /dev/null
if [ $? -eq 0 ]
then
	fmem=$((500 * 1024))
else
	fmem=$((50 * 1024))
fi

[ $ftrace_mem -gt $fmem ] && ftrace_mem=$fmem

options="$options -bufsize $ftrace_mem"
################################################################################

echo analyze_suspend test started
echo Command: analyze_suspend.py $options
analyze_suspend.py $options
if [ $? -eq 0 ]
then
	echo analyze_suspend test done
else
	echo analyze_suspend test failed
fi

upload_files -t result ./suspend-*
